// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String
  role      UserRole
  agentCode String   @unique
  visits    Visit[]
  Client    Client[]
  salesVisits   VisitRequest[] @relation("SalesAgentToVisitRequest")
}

model Client {
  id           Int      @id @default(autoincrement())
  description  String
  companyName  String
  taxCode      String   @unique
  phones       Phone[]
  emails       Email[]
  latitude     Float
  longitude    Float
  totalOrder   Float
  salesAgent   User     @relation(fields: [salesAgentId], references: [id])
  salesAgentId Int
  visits       Visit[]
  requestedVisits VisitRequest[] @relation("ClientToVisitRequest")
}

model Visit {
  id          Int      @id @default(autoincrement())
  client      Client   @relation(fields: [clientId], references: [id])
  clientId    Int
  meetingTime DateTime @default(now())
  conclusion  String
  nextMeeting DateTime
  invoice     Float
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}

model VisitRequest {
  id             Int      @id @default(autoincrement())
  salesAgentId   Int
  clientId       Int
  visitDate      DateTime?
  status         String   @default("Pending")
  SalesAgent     User     @relation("SalesAgentToVisitRequest", fields: [salesAgentId], references: [id])
  Client         Client   @relation("ClientToVisitRequest", fields: [clientId], references: [id])

  @@index([salesAgentId], name: "salesAgentId")
  @@index([clientId], name: "clientId")
}

model Phone {
  id      Int     @id @default(autoincrement())
  number  String
  clientId Int
  client  Client @relation(fields: [clientId], references: [id])
}

model Email {
  id      Int     @id @default(autoincrement())
  address String
  clientId Int
  client  Client @relation(fields: [clientId], references: [id])
}

enum UserRole {
  MANAGER
  DRIVER
  SALES_AGENT
}
